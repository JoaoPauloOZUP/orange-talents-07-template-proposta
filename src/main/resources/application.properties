#DB
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASS}

spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL9Dialect

#Feint
feign.client.config.nomeFeignClienteDefinidoNoBean.read-timeout=100
feign.client.config.nomeFeignClienteDefinidoNoBean.connect-timeout=100

#Actuator
management.endpoints.web.exposure.include=health,prometheus
management.endpoints.prometheus.enabled=true
management.endpoint.metrics.enabled=true

#Metricas
management.metrics.export.prometheus.enabled=true
management.metrics.tags.aplicacao=${NOME_DA_APLICACAO:servico de proposta}
management.metrics.tags.ambiente=${AMBIENTE:desenvolvimento}


#API
avaliacoes.host=${AVALIACOES_URL:http://localhost:9999/api/solicitacao}
cartoes.host=${CARTOES_URL:http://localhost:8888/api/cartoes}

# spring security resource server configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/proposta}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/proposta/protocol/openid-connect/certs}

#JAEGER
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}
opentracing.jaeger.service-name=${proposta}
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}
opentracing.spring.cloud.jdbc.enabled=false

